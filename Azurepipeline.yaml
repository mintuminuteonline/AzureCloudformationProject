# Simple Azure DevOps pipeline to validate and deploy an AWS CloudFormation template
trigger:
  branches:
    include:
      - main # Trigger pipeline only on push to main branch
pr: none # Disable PR triggers

pool:
  vmImage: 'ubuntu-latest'

variables:
  awsServiceConnection: 'aws-oidc-federation' # AWS service connection name
  awsRegion: 'us-east-1' # AWS region for deployment
  templatePath: '$(System.DefaultWorkingDirectory)/CloudfrontWithEc2.yaml' # Path to CloudFormation template
  devstackName: 'MyEC2CftStack-Dev' 
  prodstackName: 'MyEC2CftStack-Prod' # Name of the CloudFormation stacks

stages:
  - stage: CI_Validation
    displayName: 'CI validate-template'
    jobs:
      - job: Validate template
        displayName: 'Validate cloudformation Template'
        steps:
          - checkout: self
            displayName: 'Checkout Code'
          - task: AWSShellScript@1
            displayName: 'Validate CloudFormation Template'
            inputs:
              awsCredentials: '$(awsServiceConnection)'
              regionName: '$(awsRegion)'
              scriptType: 'inline'
              inlineScript: |
                aws cloudformation validate-template --template-body file://$(templatePath)

  - stage: Deploye_to_Dev
    displayName: 'Deployement to dev environment'
    dependsOn: CI_Validation
    condition: succeeded()
    jobs:
      - deployment: DeployDev
        displayName: 'Deploy to Dev'
        environment: 'Dev'
        strategy:
          runOnce:
            deploy:
              steps:
              - checkout: self
                displayName: 'Checkout Code'
              - task: AWSShellScript@1
                displayName: 'Deploy CloudFormation Stack'
                inputs:
                  awsCredentials: '$(awsServiceConnection)'
                  regionName: '$(awsRegion)'
                  scriptType: 'inline'
                  inlineScript: |
                    aws cloudformation deploy \
                      --template-file $(templatePath) \
                      --stack-name $(devstackName) \
                      --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM

  - stage: Deploye_to_Prod
    displayName: 'Deployement to Prod environment'
    dependsOn: Deploye_to_Dev
    condition: succeeded()
    jobs:
      - deployment: DeployProd
        displayName: 'Deploy to Prod'
        environment: 'Prod'
        strategy:
          runOnce:
            deploy:
              steps:
              - checkout: self
                displayName: 'Checkout Code'
              - task: AWSShellScript@1
                displayName: 'Deploy CloudFormation Stack'
                inputs:
                  awsCredentials: '$(awsServiceConnection)'
                  regionName: '$(awsRegion)'
                  scriptType: 'inline'
                  inlineScript: |
                    aws cloudformation deploy \
                      --template-file $(templatePath) \
                      --stack-name $(prodstackName) \
                      --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM